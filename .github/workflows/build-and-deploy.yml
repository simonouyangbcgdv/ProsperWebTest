name: Build and Deploy
on: [repository_dispatch]
jobs:
  build:
    # NOTE make sure the tenant list is always update to date
    # NOTE github will convert null to 0
    if: github.event.client_payload.tenant != 0 && contains('hsf/tgs', github.event.client_payload.tenant) && github.event.client_payload.env != 0 && contains('dev/staging/uat/prod', github.event.client_payload.env)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - name: Set outputs
        run: |
          echo ::set-output name=tenant::${{ github.event.client_payload.tenant }}
          echo ::set-output name=env::${{ github.event.client_payload.env }}
          echo ::set-output name=env_file::.env.${{ github.event.client_payload.tenant }}.${{ github.event.client_payload.env }}
          echo ::set-output name=bucket_name::cms-gatsby
        id: detection

      - name: Checkout Master branch
        if: github.event.client_payload.env == 'dev'
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Checkout branch
        if: github.event.client_payload.env != 'dev'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.env }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create .env file
        run: |
          echo GATSBY_TENANT=${{ steps.detection.outputs.tenant }} >> ${{ steps.detection.outputs.env_file }}
          echo CMS_URL=${{ secrets.HSF_DEV_CMS_URL }} >> ${{ steps.detection.outputs.env_file }}
          echo CMS_PROJECT_NAME=${{ secrets.HSF_DEV_CMS_PROJECT_NAME }} >> ${{ steps.detection.outputs.env_file }}
          echo CMS_USERNAME=${{ secrets.HSF_DEV_CMS_USERNAME }} >> ${{ steps.detection.outputs.env_file }}
          echo CMS_PASSWORD=${{ secrets.HSF_DEV_CMS_PASSWORD }} >> ${{ steps.detection.outputs.env_file }}
          echo GATSBY_API_URL=${{ secrets.HSF_DEV_GATSBY_API_URL }} >> ${{ steps.detection.outputs.env_file }}

      - name: Build project
        run: |
          yarn install --frozen-lockfile
          yarn build
        env:
          CI: true
          GATSBY_ACTIVE_TENANT: ${{ steps.detection.outputs.tenant }}
          GATSBY_ACTIVE_ENV: ${{ steps.detection.outputs.env }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: public
          path: public

      # Deploy artifacts to Amazon S3 Bucket
      - name: Deploy artifacts to Amazon S3 Bucket
        uses: ItsKarma/aws-cli@v1.70.0
        with:
          args: aws s3 website s3://${{ steps.detection.outputs.bucket_name }} --index-document index.html --error-document client-routes/index.html && aws s3 sync public s3://${{ steps.detection.outputs.bucket_name }} --no-progress --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

